{
    "sourceFile": "src/app/(main)/(pages)/calendar/components/week-view.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746332552074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746406603704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,110 @@\n-import React from 'react'\r\n+import { getHours, getWeekDays } from \"@/lib/getTime\";\r\n+import { useDateStore, useEventStore } from \"@/lib/store\";\r\n+import { cn } from \"@/lib/utils\";\r\n+import dayjs from \"dayjs\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { EventRenderer } from \"./event-renderer\";\r\n+import { ScrollArea } from \"@radix-ui/react-scroll-area\";\r\n \r\n+\r\n export default function WeekView() {\r\n+  const [currentTime, setCurrentTime] = useState(dayjs());\r\n+  const { openPopover, events } = useEventStore();\r\n+\r\n+  const { userSelectedDate, setDate } = useDateStore();\r\n+\r\n+  useEffect(() => {\r\n+    const interval = setInterval(() => {\r\n+      setCurrentTime(dayjs());\r\n+    }, 60000); // Update every minute\r\n+    return () => clearInterval(interval);\r\n+  }, []);\r\n+\r\n   return (\r\n-    <div>week-view</div>\r\n-  )\r\n-}\r\n+    <>\r\n+      <div className=\"grid grid-cols-[auto_1fr_1fr_1fr_1fr_1fr_1fr_1fr] place-items-center px-4 py-2\">\r\n+        <div className=\"w-16 border-r border-gray-300\">\r\n+          <div className=\"relative h-16\">\r\n+            <div className=\"absolute top-2 text-xs text-gray-600\">GMT +2</div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Week View Header */}\r\n+\r\n+        {getWeekDays(userSelectedDate).map(({ currentDate, today }, index) => (\r\n+          <div key={index} className=\"flex flex-col items-center\">\r\n+            <div className={cn(\"text-xs\", today && \"text-blue-600\")}>\r\n+              {currentDate.format(\"ddd\")}\r\n+            </div>\r\n+            <div\r\n+              className={cn(\r\n+                \"h-12 w-12 rounded-full p-2 text-2xl\",\r\n+                today && \"bg-blue-600 text-white\",\r\n+              )}\r\n+            >\r\n+              {currentDate.format(\"DD\")}{\" \"}\r\n+            </div>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+\r\n+      {/* Time Column & Corresponding Boxes of time per each date  */}\r\n+\r\n+      <ScrollArea className=\"h-[70vh]\">\r\n+        <div className=\"grid grid-cols-[auto_1fr_1fr_1fr_1fr_1fr_1fr_1fr] px-4 py-2\">\r\n+          {/* Time Column */}\r\n+          <div className=\"w-16 border-r border-gray-300\">\r\n+            {getHours.map((hour, index) => (\r\n+              <div key={index} className=\"relative h-16\">\r\n+                <div className=\"absolute -top-2 text-xs text-gray-600\">\r\n+                  {hour.format(\"HH:mm\")}\r\n+                </div>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+\r\n+          {/* Week Days Corresponding Boxes */}\r\n+\r\n+          {getWeekDays(userSelectedDate).map(\r\n+            ({ isCurrentDay, today }, index) => {\r\n+              const dayDate = userSelectedDate\r\n+                .startOf(\"week\")\r\n+                .add(index, \"day\");\r\n+\r\n+              return (\r\n+                <div key={index} className=\"relative border-r border-gray-300\">\r\n+                  {getHours.map((hour, i) => (\r\n+                    <div\r\n+                      key={i}\r\n+                      className=\"relative flex h-16 cursor-pointer flex-col items-center gap-y-2 border-b border-gray-300 hover:bg-gray-100\"\r\n+                      onClick={() => {\r\n+                        setDate(dayDate.hour(hour.hour()));\r\n+                        openPopover();\r\n+                      }}\r\n+                    >\r\n+                      <EventRenderer\r\n+                        events={events}\r\n+                        date={dayDate.hour(hour.hour())}\r\n+                        view=\"week\"\r\n+                      />\r\n+                    </div>\r\n+                  ))}\r\n+                  {/* Current time indicator */}\r\n+\r\n+                  {isCurrentDay(dayDate) && today && (\r\n+                    <div\r\n+                      className={cn(\"absolute h-0.5 w-full bg-red-500\")}\r\n+                      style={{\r\n+                        top: `${(currentTime.hour() / 24) * 100}%`,\r\n+                      }}\r\n+                    />\r\n+                  )}\r\n+                </div>\r\n+              );\r\n+            },\r\n+          )}\r\n+        </div>\r\n+      </ScrollArea>\r\n+    </>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1746332552074,
            "name": "Commit-0",
            "content": "import React from 'react'\r\n\r\nexport default function WeekView() {\r\n  return (\r\n    <div>week-view</div>\r\n  )\r\n}\r\n"
        }
    ]
}